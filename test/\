import pytest
import bcrypt
import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))
import config
import json

from app        import create_app
from sqlalchemy import create_engine, text


database = create_engine(config.test_config['DB_URL'], encoding='utf-8', max_overflow=0)

@pytest.fixture
def api():
    app = create_app(config.test_config)
    app.config['TEST']  = True
    api                 = app.test_client()

    return api

def setup_function():
    hashed_password = bcrypt.hashpw('pw'.encode('utf-8'), bcrypt.gensalt())

    new_users   = [
        {
            'id'                : 1,
            'name'              : 'messi',
            'email'             : 'messi@',
            'profile'           : 'ten',
            'hashed_password'   : hashed_password
        },
        {
            'id'                : 2,
            'name'              : 'naldo',
            'email'             : 'naldo@',
            'profile'           : 'seven',
            'hashed_password'   : hashed_password
        }
    ]
    
    database.execute(text("""
        insert into users (
            id,
            name,
            email,
            profile,
            hashed_password
        ) values (
            :id,
            :name,
            :email,
            :profile,
            :hashed_password
        )
    """), new_users)

    database.execute(text("""
        insert into tweets (
            user_id,
            tweet
        ) values (
            2,
            'hi messi'
        )
    """))

def teardown_function():
    database.execute(text("set foreign_key_checks=0"))
    database.execute(text("truncate users"))
    database.execute(text("truncate tweets"))
    database.execute(text("truncate users_follow_list"))
    database.execute(text("set foreign_key_checks=1"))

def test_ping(api):
    resp    = api.get('/ping')
    assert b'pong' in resp.data
